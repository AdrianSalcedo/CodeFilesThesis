init = init_sir,
chains = n_chains,
warmup = n_warmups,
iter = n_iter,
thin = n_thin,
#control = list(adapt_delta = 0.99999)
)
time.end_nuts <- Sys.time()
duration_nuts <- time.end_nuts - time.start_nuts
parameters = c("theta", "R_0", "y_init")
nuts_fit_summary <- summary(nuts_fit, pars = parameters)$summary
print(nuts_fit_summary,
scientific = FALSE,
digits = 4)
sub_path_1 <- "/home/gabrielsalcedo"
sub_path_2 <- "Documentos/TYLCVD-fit"
sub_path_3 <- "Model6/runs"
prefix_time <- Sys.time()
prefix_time <- paste(date(prefix_time),
hour(prefix_time),
minute(prefix_time), sep="_")
file_name <- paste("run-", prefix_time,".RData", sep="")
runs_path <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name, sep = "/")
save.image(file=runs_path)
#
#### Post analysis ####
#
mcmcm_post_analysis(nuts_sample = nuts_fit)
#
### Model Fit ####
# Model fitted values across the observed time period
#
model_fit()
library(deSolve)
library(dplyr)
library(rstan)
library(gridExtra)
library(outbreaks)
library(bayesplot)
library(data.table)
library(knitr)
library(kableExtra)
library(tidyverse)
library(plotly)
library(ggplot2)
source("load_data.R")
source("init_tomato_sir.R")
source("mcmc_stain_summary.R")
source("mcmc_post_analysis.R")
source("divergence_plots.R")
source("model_fit.R")
#
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
#
data_tomato <- load_data()
onset <- data_tomato[[1]]
cum_cases <- round(data_tomato[[2]], digits = 0)
cum_cases <- unlist(cum_cases, use.names = FALSE)
####################
data_df <- read_csv(
"/home/gabrielsalcedo/Documentos/TYLCVD-fit/Model6/data/datos_squares.csv"
)
onset_real <- round(data_df$Time)
cum_cases_real <- round(data_df$Interpolate_Ip)
######################
N <- nrow(onset)
pop <- 1000 # Plant population
sample_time <- 1:N
#### SIR rstan model ####
mdl <- stan_model("sirTomato2.stan")
#
#### mcmc parameters ####
n_chains <- 5
n_warmups <- 500
n_iter <- 2000
n_thin <- 50
n_total_iter = n_warmups + n_iter * n_thin
set.seed(972198)
tomato_data <- list(n_obs = N,
n_theta = 9,
n_difeq = 7,
n_pop = pop,
y = cum_cases,
t0 = 0,
ts = sample_time)
parameters <- c("y_hat", "y_init", "theta", "R_0")
time.start_nuts <- Sys.time()
nuts_fit <-
sampling(mdl,
data = tomato_data,
pars = parameters,
init = init_sir,
chains = n_chains,
warmup = n_warmups,
iter = n_total_iter,
thin = n_thin,
control = list(adapt_delta = 0.99999)
)
time.end_nuts <- Sys.time()
duration_nuts <- time.end_nuts - time.start_nuts
parameters = c("theta", "R_0", "y_init")
nuts_fit_summary <- summary(nuts_fit, pars = parameters)$summary
print(nuts_fit_summary,
scientific = FALSE,
digits = 4)
sub_path_1 <- "/home/gabrielsalcedo"
sub_path_2 <- "Documentos/TYLCVD-fit"
sub_path_3 <- "Model6/runs"
prefix_time <- Sys.time()
prefix_time <- paste(date(prefix_time),
hour(prefix_time),
minute(prefix_time), sep="_")
file_name <- paste("run-", prefix_time,".RData", sep="")
runs_path <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name, sep = "/")
save.image(file=runs_path)
#
#### Post analysis ####
#
mcmcm_post_analysis(nuts_sample = nuts_fit)
#
### Model Fit ####
# Model fitted values across the observed time period
#
model_fit()
library(deSolve)
library(dplyr)
library(rstan)
library(gridExtra)
library(outbreaks)
library(bayesplot)
library(data.table)
library(knitr)
library(kableExtra)
library(tidyverse)
library(plotly)
library(ggplot2)
source("load_data.R")
source("init_tomato_sir.R")
source("mcmc_stain_summary.R")
source("mcmc_post_analysis.R")
source("divergence_plots.R")
source("model_fit.R")
#
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
#
data_tomato <- load_data()
onset <- data_tomato[[1]]
cum_cases <- round(data_tomato[[2]], digits = 0)
cum_cases <- unlist(cum_cases, use.names = FALSE)
####################
data_df <- read_csv(
"/home/gabrielsalcedo/Documentos/TYLCVD-fit/Model6/data/datos_squares.csv"
)
onset_real <- round(data_df$Time)
cum_cases_real <- round(data_df$Interpolate_Ip)
######################
N <- nrow(onset)
pop <- 1000 # Plant population
sample_time <- 1:N
#### SIR rstan model ####
mdl <- stan_model("sirTomato2.stan")
#
#### mcmc parameters ####
n_chains <- 5
n_warmups <- 500
n_iter <- 2000
n_thin <- 50
n_total_iter = n_warmups + n_iter * n_thin
set.seed(972198)
tomato_data <- list(n_obs = N,
n_theta = 9,
n_difeq = 7,
n_pop = pop,
y = cum_cases,
t0 = 0,
ts = sample_time)
parameters <- c("y_hat", "y_init", "theta", "R_0")
time.start_nuts <- Sys.time()
nuts_fit <-
sampling(mdl,
data = tomato_data,
pars = parameters,
init = init_sir,
chains = n_chains,
warmup = n_warmups,
iter = n_total_iter,
thin = n_thin#,
#control = list(adapt_delta = 0.99999)
)
time.end_nuts <- Sys.time()
duration_nuts <- time.end_nuts - time.start_nuts
parameters = c("theta", "R_0", "y_init")
nuts_fit_summary <- summary(nuts_fit, pars = parameters)$summary
print(nuts_fit_summary,
scientific = FALSE,
digits = 4)
sub_path_1 <- "/home/gabrielsalcedo"
sub_path_2 <- "Documentos/TYLCVD-fit"
sub_path_3 <- "Model6/runs"
prefix_time <- Sys.time()
prefix_time <- paste(date(prefix_time),
hour(prefix_time),
minute(prefix_time), sep="_")
file_name <- paste("run-", prefix_time,".RData", sep="")
runs_path <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name, sep = "/")
save.image(file=runs_path)
#
#### Post analysis ####
#
mcmcm_post_analysis(nuts_sample = nuts_fit)
#
### Model Fit ####
# Model fitted values across the observed time period
#
model_fit()
fit = nuts_fit
# Set initial values:
parameters = c(
"theta", "R_0", "y_init"
)
nuts_fit_summary <- summary(nuts_fit, pars = parameters)$summary
df_pars <- data.frame(nuts_fit_summary)
names(df_pars)[4] <-"2.5%"
names(df_pars)[5] <-"25%"
names(df_pars)[6] <-"50%"
names(df_pars)[7] <-"75%"
names(df_pars)[8] <-"97.5%"
colnames(df_pars) <- c('mean', 'se_mean','sd',
'2.5%', '25%','50%',
'75%' ,'97.5%', 'n_eff', 'Rhat')
row.names(df_pars) <- c("beta_p", "r_1", "r_2", "b", "beta_v",
"gamma", "gamma_f", "theta_1", "mu",
"R_zero",
"Sp0", "Lp0", "Ip0",
"Sv0", "Iv0"
)
print(df_pars)
prefix_time <- Sys.time()
prefix_time <- paste(as.Date(prefix_time),
hour(prefix_time),
minute(prefix_time), sep="_")
sub_path_1 <- "/home/gabrielsalcedo"
sub_path_2 <- "Documentos/TYLCVD-fit"
sub_path_3 <- "Model6/estimation"
file_name <- paste("parameters", prefix_time,".csv", sep="")
path <- paste(sub_path_1,
sub_path_2,
sub_path_3,
file_name,
sep = "/")
path_last <- paste(sub_path_1,
sub_path_2,
sub_path_3,
"last_est.csv",
sep = "/")
write.csv(df_pars, path)
write.csv(df_pars, path_last)
View(mcmcm_stain_summary)
View(mcmcm_post_analysis)
View(mcmcm_post_analysis)
nuts_sample = nuts_fit
#' Create and save post analysis plots
#' @param nuts_sample a list with the output of the sampling method
#' @return trace, pairs, and density plots for evaluate the quality
#' of the estimation
#'
posts <-  rstan::extract(nuts_fit)
mod_diagnostics  <- rstan::get_sampler_params(nuts_fit)
#
# Check for divergent transitions
#
rstan::check_divergences(nuts_fit)
posterior <- as.array(nuts_fit)
color_scheme_set("viridisE")
#
# Markov chain traceplots
#
pars1 <- c("theta[1]",
"theta[2]",
"theta[3]",
"theta[4]"
)
pars2 <- c("theta[5]",
"theta[6]",
"theta[7]",
"theta[8]",
"theta[9]")
pars3 <-c(
"y_init[1]",
"y_init[2]",
"y_init[3]",
"y_init[4]"
)
pars4<-c("y_init[5]",
"y_init[6]",
"y_init[7]"
)
p1 <- mcmc_trace_highlight(posterior, pars = "lp__")
p2 <- mcmc_trace_highlight(posterior, pars = "R_0")
p31 <- mcmc_trace(posterior, pars = pars1)
p32 <- mcmc_trace(posterior, pars = pars2)
p33 <- mcmc_trace(posterior, pars = pars3)
p34 <- mcmc_trace(posterior, pars = pars4)
#
#
p4 <- mcmc_pairs(posterior,
pars = pars1,
off_diag_args = list(size = 0.75),
np_style = pairs_style_np(
div_color = "red",
div_shape = 4,
div_size = 1,
div_alpha = 1,
td_color = "yellow2",
td_shape = 3,
td_size = 1,
td_alpha = 0.5))
p41 <- mcmc_pairs(posterior,
pars = pars1,
off_diag_args = list(size = 0.75),
np_style = pairs_style_np(
div_color = "red",
div_shape = 4,
div_size = 1,
div_alpha = 1,
td_color = "yellow2",
td_shape = 3,
td_size = 1,
td_alpha = 0.5))
p42 <- mcmc_pairs(posterior,
pars = pars2,
off_diag_args = list(size = 0.75),
np_style = pairs_style_np(
div_color = "red",
div_shape = 4,
div_size = 1,
div_alpha = 1,
td_color = "yellow2",
td_shape = 3,
td_size = 1,
td_alpha = 0.5))
p43 <- mcmc_pairs(posterior,
pars = pars3,
off_diag_args = list(size = 0.75),
np_style = pairs_style_np(
div_color = "red",
div_shape = 4,
div_size = 1,
div_alpha = 1,
td_color = "yellow2",
td_shape = 3,
td_size = 1,
td_alpha = 0.5))
p44 <- mcmc_pairs(posterior,
pars = pars4,
off_diag_args = list(size = 0.75),
np_style = pairs_style_np(
div_color = "red",
div_shape = 4,
div_size = 1,
div_alpha = 1,
td_color = "yellow2",
td_shape = 3,
td_size = 1,
td_alpha = 0.5))
#
p51 <- stan_dens(nuts_fit, pars = pars1, separate_chains = TRUE)
p52 <- stan_dens(nuts_fit, pars = pars2, separate_chains = TRUE)
p53 <- stan_dens(nuts_fit, pars = pars3, separate_chains = TRUE)
p54 <- stan_dens(nuts_fit, pars = pars4, separate_chains = TRUE)
#
p61 <- mcmc_intervals(posterior, pars = pars1)
p62 <- mcmc_intervals(posterior, pars = pars2)
p63 <- mcmc_intervals(posterior, pars = pars3)
p64 <- mcmc_intervals(posterior, pars = pars4)
#
sub_path_1 <- "/home/gabrielsalcedo"
sub_path_2 <- "Documentos/TYLCVD-fit"
sub_path_3 <- "Model6/plots"
file_name_1 <- "trace_posterior.pdf"
file_name_2 <- "trace_r_zero.pdf"
file_name_31 <- "trace_parameters1.pdf"
file_name_32 <- "trace_parameters2.pdf"
file_name_33 <- "trace_parameters3.pdf"
file_name_34 <- "trace_parameters4.pdf"
file_name_41 <- "pairs1.pdf"
file_name_42 <- "pairs2.pdf"
file_name_43 <- "pairs3.pdf"
file_name_44 <- "pairs4.pdf"
file_name_51 <- "posterior_densities1.pdf"
file_name_52 <- "posterior_densities2.pdf"
file_name_53 <- "posterior_densities3.pdf"
file_name_54 <- "posterior_densities4.pdf"
file_name_61 <- "intervals1.pdf"
file_name_62 <- "intervals2.pdf"
file_name_63 <- "intervals3.pdf"
file_name_64 <- "intervals4.pdf"
#
plot_path_1 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_1, sep = "/")
plot_path_2 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_2, sep = "/")
plot_path_31 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_31, sep = "/")
plot_path_32 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_32, sep = "/")
plot_path_33 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_33, sep = "/")
plot_path_34 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_34, sep = "/")
plot_path_41 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_41, sep = "/")
plot_path_42 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_42, sep = "/")
plot_path_43 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_43, sep = "/")
plot_path_44 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_44, sep = "/")
plot_path_51 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_51, sep = "/")
plot_path_52 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_52, sep = "/")
plot_path_53 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_53, sep = "/")
plot_path_54 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_54, sep = "/")
plot_path_61 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_61, sep = "/")
plot_path_62 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_62, sep = "/")
plot_path_63 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_63, sep = "/")
plot_path_64 <-
paste(sub_path_1, sub_path_2, sub_path_3, file_name_64, sep = "/")
ggsave(plot_path_1, plot = p1)
ggsave(plot_path_2, plot = p2)
ggsave(plot_path_31 , plot = p31)
ggsave(plot_path_32 , plot = p32)
ggsave(plot_path_33 , plot = p33)
ggsave(plot_path_34 , plot = p34)
ggsave(plot_path_41,
plot = p41,
width = 11,
height = 8,
dpi = 100,
units = "in")
ggsave(plot_path_42,
plot = p42,
width = 11,
height = 8,
dpi = 100,
units = "in")
ggsave(plot_path_43,
plot = p43,
width = 11,
height = 8,
dpi = 100,
units = "in")
ggsave(plot_path_44,
plot = p44,
width = 11,
height = 8,
dpi = 100,
units = "in")
#
ggsave(plot_path_51, plot = p51)
ggsave(plot_path_52, plot = p52)
ggsave(plot_path_53, plot = p53)
ggsave(plot_path_54, plot = p54)
ggsave(plot_path_61, plot = p61)
ggsave(plot_path_62, plot = p62)
ggsave(plot_path_63, plot = p63)
ggsave(plot_path_64, plot = p64)
chain1_3 <- traceplot(nuts_fit, pars = c("theta[1]", "theta[2]", "theta[3]"))
file_name1_3 <- "chain1_3.pdf"
plot_path1_3 <-
paste(sub_path_1,
sub_path_2,
"Model6/plots",
file_name1_3, sep = "/")
ggsave(plot_path1_3)
chain4_6 <- traceplot(nuts_fit, pars = c("theta[4]", "theta[5]", "theta[6]"))
file_name4_6 <- "chain4_6.pdf"
plot_path4_6 <-
paste(sub_path_1,
sub_path_2,
"Model6/plots",
file_name4_6, sep = "/")
ggsave(plot_path4_6)
chain7_9 <- traceplot(nuts_fit, pars = c("theta[7]", "theta[8]", "theta[9]"))
file_name7_9 <- "chain7_9.pdf"
plot_path7_9 <-
paste(sub_path_1,
sub_path_2,
"Model6/plots",
file_name7_9, sep = "/")
ggsave(plot_path7_9)
chain_lp <- traceplot(nuts_fit, pars = c("lp__"))
file_name_lp <- "chain_lp.pdf"
plot_path_lp <-
paste(sub_path_1,
sub_path_2,
"Model6/plots",
file_name_lp, sep = "/")
ggsave(plot_path_lp)
library(dplyr)
library(tidyverse)
