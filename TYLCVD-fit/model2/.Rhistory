geom_vline(xintercept = mean_, linetype="dotted",
color = "red", size=0.5)+
annotate(geom = "text", x = 1.30 * mean_, y=0, label = text,
color="black")
return(p)
}
#
gamma_ <- function(alpha, beta, ylabel="gamma_S"){
# We suppose mu_. as a exponential r.v.
theta <- 1 / beta
x <- seq(from = 0, to = 1, by=.001)
gamma_s_ <- dgamma(x, shape = alpha,
scale= theta)
df <- data.frame(x=x, gamma_s = gamma_s_)
mean_ <- alpha * theta
mean_time <- 1/mean_
text <- paste(mean_time,"days")
p <- ggplot(data=df,
aes(x = x,
y = gamma_s)) +
geom_line(colour = "#000000") +
geom_area(alpha = 0.6, fill = "lightgray") +
geom_vline(xintercept = mean_, linetype="dotted",
color = "red", size=0.5) +
annotate(geom="text", x=1.30 * mean_, y=0, label = text,
color="black")
return(p)
}
pi_mu_h <- mu_(lambda = 25, ylabel= "mu_h")
pi_mu_i_s <- mu_(lambda = 35, ylabel= "mu_i_s")
pi_gamma_s <- gamma_(alpha = 10, beta = 100,  ylabel= "gamma_S")
pi_gamma_a <- gamma_(alpha = 10, beta = 50,  ylabel= "gamma_A")
pi_gamma_h <- gamma_(alpha = 10, beta = 250,  ylabel= "gamma_H")
fig6 <- ggplotly(pi_mu_h)
fig7 <- ggplotly(pi_mu_i_s)
fig8 <- ggplotly(pi_gamma_s)
fig9 <- ggplotly(pi_gamma_a)
fig10 <- ggplotly(pi_gamma_h)
fig6
fig7
fig8
fig9
fig10
library(knitr)
library(kableExtra)
#
sub_path_1 <- "/home/saul/sauld@cimat.mx/UNISON/Articles/NovelCovid-19"
sub_path_2 <- "NovelCovid19-ControlModelling/COVID19-VACINATION/r_sources"
sub_path_3 <- "mcmc_parameter_estimation/UNISON-UADY-Project/estimation"
file_name <- "last_est.csv"
path <- paste(sub_path_1, sub_path_2, sub_path_3, file_name, sep = "/")
parameters_df <- read.csv(path, header=FALSE,skip = 1)
load("/home/gabrielsalcedo/Documentos/TYLCVD-fit/model3/runs/run-2022-04-26_13_0.RData")
fit = nuts_fit
parameters = c(
"theta", "R_0", "y_init"
)
nuts_fit_summary <- summary(nuts_fit, pars = parameters)$summary
df_pars <- data.frame(nuts_fit_summary)
library(deSolve)
library(dplyr)
library(rstan)
library(gridExtra)
library(outbreaks)
library(bayesplot)
library(data.table)
library(knitr)
library(kableExtra)
library(tidyverse)
parameters = c(
"theta", "R_0", "y_init"
)
nuts_fit_summary <- summary(nuts_fit, pars = parameters)$summary
df_pars <- data.frame(nuts_fit_summary)
names(df_pars)[4] <-"2.5%"
names(df_pars)[5] <-"25%"
names(df_pars)[6] <-"50%"
names(df_pars)[7] <-"75%"
names(df_pars)[8] <-"97.5%"
colnames(df_pars) <- c('mean', 'se_mean','sd',
'2.5%', '25%','50%',
'75%' ,'97.5%', 'n_eff', 'Rhat')
row.names(df_pars) <- c("beta_p", "b", "beta_v",
"theta_1", "mu",
"R_zero",
"Sp0", "Lp0", "Ip0",
"Sv0", "Iv0"
)
print(df_pars)
prefix_time <- Sys.time()
prefix_time <- paste(as.Date(prefix_time),
hour(prefix_time),
minute(prefix_time), sep="_")
sub_path_1 <- "/home/gabrielsalcedo"
sub_path_2 <- "Documentos/TYLCVD-fit"
sub_path_3 <- "model3/estimation"
file_name <- paste("parameters", prefix_time,".csv", sep="")
path <- paste(sub_path_1,
sub_path_2,
sub_path_3,
file_name,
sep = "/")
path_last <- paste(sub_path_1,
sub_path_2,
sub_path_3,
"last_est.csv",
sep = "/")
write.csv(df_pars, path)
write.csv(df_pars, path_last)
setwd("~/")
setwd("~/Documentos/TYLCVD-fit/model2")
library(deSolve)
library(dplyr)
library(rstan)
library(gridExtra)
library(outbreaks)
library(bayesplot)
library(data.table)
library(knitr)
library(kableExtra)
library(tidyverse)
df_data_real <- read_csv("datos_squares.csv")
df_data <- read_csv("interpolated_Ramsh_data2.csv")
t_real <- df_data_real$t
cases_real <- df_data_real$y
cases_real <- 1000*cases_real
theme_set(theme_bw())
ggplot(data = df_data) +
geom_point(mapping = aes(x = t_real, y = cases_real ), color ='red') +
labs(y = "Number of infected plants")
rstan_options (auto_write = TRUE)
options (mc.cores = parallel::detectCores ())
# time series of cases
cases <- as.integer(df_data$Interpolate_Ip)  # Number of students in bed
# total count
N <- 1000;
# times
n_days <- length(cases)
t <- seq(0, n_days, by = 1)
t0 = 0
t <- t[-1]
#initial conditions
lp0 <- 0.003
ip0 <- 0.001
sp0 <- 1 - lp0 - ip0
sv0 <- 0.4
iv0 <- 0.3
y0 = c(Sp = sp0, Lp = lp0, Ip = ip0, Sv = sv0, Iv = iv0, Ipc = 0.001)
# data for Stan
data_sir <- list(n_days = n_days, y0 = y0, t0 = t0, ts = t, N = N, cases = cases)
model <- stan_model("SIR_tomato.stan")
library(deSolve)
library(dplyr)
library(rstan)
library(gridExtra)
library(outbreaks)
library(bayesplot)
library(data.table)
library(knitr)
library(kableExtra)
library(tidyverse)
df_data_real <- read_csv("datos_squares.csv")
df_data <- read_csv("interpolated_Ramsh_data2.csv")
t_real <- df_data_real$t
cases_real <- df_data_real$y
cases_real <- 1000*cases_real
theme_set(theme_bw())
ggplot(data = df_data) +
geom_point(mapping = aes(x = t_real, y = cases_real ), color ='red') +
labs(y = "Number of infected plants")
rstan_options (auto_write = TRUE)
options (mc.cores = parallel::detectCores ())
# time series of cases
cases <- as.integer(df_data$Interpolate_Ip)  # Number of students in bed
# total count
N <- 1000;
# times
n_days <- length(cases)
t <- seq(0, n_days, by = 1)
t0 = 0
t <- t[-1]
#initial conditions
lp0 <- 0.003
ip0 <- 0.001
sp0 <- 1 - lp0 - ip0
sv0 <- 0.4
iv0 <- 0.3
y0 = c(Sp = sp0, Lp = lp0, Ip = ip0, Sv = sv0, Iv = iv0, Ipc = 0.001)
# data for Stan
data_sir <- list(n_days = n_days, y0 = y0, t0 = t0, ts = t, N = N, cases = cases)
model <- stan_model("SIR_tomato.stan")
fit_sir_negbin <- sampling(model,
data = data_sir,
iter = niter,
chains = 4,
seed = 0)
fit_sir_negbin <- sampling(model,
data = data_sir,
iter = n_iter,
chains = 4,
seed = 0)
library(deSolve)
library(dplyr)
library(rstan)
library(gridExtra)
library(outbreaks)
library(bayesplot)
library(data.table)
library(knitr)
library(kableExtra)
library(tidyverse)
df_data_real <- read_csv("datos_squares.csv")
df_data <- read_csv("interpolated_Ramsh_data2.csv")
t_real <- df_data_real$t
cases_real <- df_data_real$y
cases_real <- 1000*cases_real
theme_set(theme_bw())
ggplot(data = df_data) +
geom_point(mapping = aes(x = t_real, y = cases_real ), color ='red') +
labs(y = "Number of infected plants")
rstan_options (auto_write = TRUE)
options (mc.cores = parallel::detectCores ())
# time series of cases
cases <- as.integer(df_data$Interpolate_Ip)  # Number of students in bed
# total count
N <- 1000;
# times
n_days <- length(cases)
t <- seq(0, n_days, by = 1)
t0 = 0
t <- t[-1]
#initial conditions
lp0 <- 0.003
ip0 <- 0.001
sp0 <- 1 - lp0 - ip0
sv0 <- 0.4
iv0 <- 0.3
y0 = c(Sp = sp0, Lp = lp0, Ip = ip0, Sv = sv0, Iv = iv0, Ipc = 0.001)
# data for Stan
data_sir <- list(n_days = n_days, y0 = y0, t0 = t0, ts = t, N = N, cases = cases)
model <- stan_model("SIR_tomato.stan")
fit_sir_negbin <- sampling(model,
data = data_sir,
iter = 2000,
chains = 4,
seed = 0)
check_hmc_diagnostics(fit_sir_negbin)
posts <-  rstan::extract(fit_sir_negbin)
mod_diagnostics  <- rstan::get_sampler_params(fit_sir_negbin)
color_scheme_set("viridisE")
fit_CIS <- posts$y[, ,6] * pop
fit_SIR <- fit_CIS
fit_SIR
fit_CIS <- posts$y[, ,6]
fit_CIS <- posts$y[, ,6]
fit_SIR <- fit_CIS
fit_SIR
median_I = apply(fit_SIR, 2, median)
low_I = apply(fit_SIR, 2, quantile, probs = c(0.025))
high_I = apply(fit_SIR, 2, quantile, probs = c(0.975))
View(df_data)
dates <- df_data$time
df_sample_N = data.frame(cases, dates)
df_fit_CIS = data.frame(median_I, low_I, high_I, dates)
plt <- ggplot(df_sample_N,aes(x = dates, y = cum_cases))
plt <- ggplot(df_sample_N,aes(x = dates, y = cum_cases))+
geom_ribbon(aes(x = dates, ymin = low_I, ymax = high_I), fill = "orange",
alpha = 0.6)
plt <- ggplot(df_sample_N,aes(x = dates, y = cum_cases))+
geom_ribbon(aes(x = dates, ymin = low_I, ymax = high_I), fill = "orange",
alpha = 0.6)
+
geom_line(data = df_fit_CIS, aes(x = dates, y = median_I,
color = "Median"), size = 1.3) +
#geom_point(data = df_sample_N_real,
#            aes(x = dates_real, y = cum_cases_real), color = "red") +
geom_point(shape = 1, size = 2, (aes(color = "Data"))) +
scale_colour_manual(name = '', values = c('Data' = 'black',
'Median' = 'darkorange3')) +
guides(colour = guide_legend(override.aes = list(shape = c(16, NA),
linetype = c(0, 1)))) +
labs(x = "Time (days)", y = "Cumulative Infected Cases")
plt <- ggplot(df_sample_N,aes(x = dates, y = cum_cases))+
geom_ribbon(aes(x = dates, ymin = low_I, ymax = high_I), fill = "orange",
alpha = 0.6)
+
geom_line(data = df_fit_CIS, aes(x = dates, y = median_I,
color = "Median"), size = 1.3)
plt <- ggplot(df_sample_N,aes(x = dates, y = cum_cases))+
geom_ribbon(aes(x = dates, ymin = low_I, ymax = high_I), fill = "orange",
alpha = 0.6) +
geom_line(data = df_fit_CIS, aes(x = dates, y = median_I,
color = "Median"), size = 1.3)
show(plt)
ggplot(df_sample_N,aes(x = dates, y = cum_cases))
plt <- ggplot(df_sample_N,aes(x = dates, y = cases))+
geom_ribbon(aes(x = dates, ymin = low_I, ymax = high_I), fill = "orange",
alpha = 0.6)
show(plt)
plt <- ggplot(df_sample_N,aes(x = dates, y = cases))+
geom_ribbon(aes(x = dates, ymin = low_I, ymax = high_I), fill = "orange",
alpha = 0.6) +
geom_line(data = df_fit_CIS, aes(x = dates, y = median_I,
color = "Median"), size = 1.3) +
#geom_point(data = df_sample_N_real,
#            aes(x = dates_real, y = cum_cases_real), color = "red") +
geom_point(shape = 1, size = 2, (aes(color = "Data"))) +
scale_colour_manual(name = '', values = c('Data' = 'black',
'Median' = 'darkorange3')) +
guides(colour = guide_legend(override.aes = list(shape = c(16, NA),
linetype = c(0, 1)))) +
labs(x = "Time (days)", y = "Cumulative Infected Cases")
show(plt)
color_scheme_set("viridisE")
fit_CIS <- posts$y[, ,6]*1000
fit_SIR <- fit_CIS
median_I = apply(fit_SIR, 2, median)
low_I = apply(fit_SIR, 2, quantile, probs = c(0.025))
high_I = apply(fit_SIR, 2, quantile, probs = c(0.975))
df_sample_N = data.frame(cases, dates)
df_sample_N_real = data.frame(cum_cases_real, dates_real)
df_fit_CIS = data.frame(median_I, low_I, high_I, dates)
plt <- ggplot(df_sample_N,aes(x = dates, y = cases))+
geom_ribbon(aes(x = dates, ymin = low_I, ymax = high_I), fill = "orange",
alpha = 0.6) +
geom_line(data = df_fit_CIS, aes(x = dates, y = median_I,
color = "Median"), size = 1.3) +
#geom_point(data = df_sample_N_real,
#            aes(x = dates_real, y = cum_cases_real), color = "red") +
geom_point(shape = 1, size = 2, (aes(color = "Data"))) +
scale_colour_manual(name = '', values = c('Data' = 'black',
'Median' = 'darkorange3')) +
guides(colour = guide_legend(override.aes = list(shape = c(16, NA),
linetype = c(0, 1)))) +
labs(x = "Time (days)", y = "Cumulative Infected Cases")
show(plt)
df_sample_N_real = data.frame(cases_real, t_real)
plt <- ggplot(df_sample_N,aes(x = dates, y = cases))+
geom_ribbon(aes(x = dates, ymin = low_I, ymax = high_I), fill = "orange",
alpha = 0.6) +
geom_line(data = df_fit_CIS, aes(x = dates, y = median_I,
color = "Median"), size = 1.3) +
geom_point(data = df_sample_N_real,
aes(x = dates_real, y = cum_cases_real), color = "red") +
geom_point(shape = 1, size = 2, (aes(color = "Data"))) +
scale_colour_manual(name = '', values = c('Data' = 'black',
'Median' = 'darkorange3')) +
guides(colour = guide_legend(override.aes = list(shape = c(16, NA),
linetype = c(0, 1)))) +
labs(x = "Time (days)", y = "Cumulative Infected Cases")
show(plt)
plt <- ggplot(df_sample_N,aes(x = dates, y = cases))+
geom_ribbon(aes(x = dates, ymin = low_I, ymax = high_I), fill = "orange",
alpha = 0.6) +
geom_line(data = df_fit_CIS, aes(x = dates, y = median_I,
color = "Median"), size = 1.3) +
geom_point(data = df_sample_N_real,
aes(x = t_real, y = cum_cases_real), color = "red") +
geom_point(shape = 1, size = 2, (aes(color = "Data"))) +
scale_colour_manual(name = '', values = c('Data' = 'black',
'Median' = 'darkorange3')) +
guides(colour = guide_legend(override.aes = list(shape = c(16, NA),
linetype = c(0, 1)))) +
labs(x = "Time (days)", y = "Cumulative Infected Cases")
show(plt)
plt <- ggplot(df_sample_N,aes(x = dates, y = cases))+
geom_ribbon(aes(x = dates, ymin = low_I, ymax = high_I), fill = "orange",
alpha = 0.6) +
geom_line(data = df_fit_CIS, aes(x = dates, y = median_I,
color = "Median"), size = 1.3) +
geom_point(data = df_sample_N_real,
aes(x = t_real, y = cases_real), color = "red") +
geom_point(shape = 1, size = 2, (aes(color = "Data"))) +
scale_colour_manual(name = '', values = c('Data' = 'black',
'Median' = 'darkorange3')) +
guides(colour = guide_legend(override.aes = list(shape = c(16, NA),
linetype = c(0, 1)))) +
labs(x = "Time (days)", y = "Cumulative Infected Cases")
show(plt)
library(deSolve)
library(dplyr)
library(rstan)
library(gridExtra)
library(outbreaks)
library(bayesplot)
library(data.table)
library(knitr)
library(kableExtra)
library(tidyverse)
df_data_real <- read_csv("datos_squares.csv")
df_data <- read_csv("interpolated_Ramsh_data.csv")
t_real <- df_data_real$t
cases_real <- df_data_real$y
cases_real <- 1000*cases_real
theme_set(theme_bw())
ggplot(data = df_data) +
geom_point(mapping = aes(x = t_real, y = cases_real ), color ='red') +
labs(y = "Number of infected plants")
rstan_options (auto_write = TRUE)
options (mc.cores = parallel::detectCores ())
# time series of cases
cases <- as.integer(df_data$Interpolate_Ip)
dates <- df_data$time
# total count
N <- 1000;
# times
n_days <- length(cases)
t <- seq(0, n_days, by = 1)
t0 = 0
t <- t[-1]
#initial conditions
lp0 <- 0.003
ip0 <- 0.001
sp0 <- 1 - lp0 - ip0
sv0 <- 0.4
iv0 <- 0.3
y0 = c(Sp = sp0, Lp = lp0, Ip = ip0, Sv = sv0, Iv = iv0, Ipc = 0.001)
# data for Stan
data_sir <- list(n_days = n_days, y0 = y0, t0 = t0, ts = t, N = N, cases = cases)
model <- stan_model("SIR_tomato.stan")
fit_sir_negbin <- sampling(model,
data = data_sir,
iter = 5000,
chains = 4,
seed = 0)
check_hmc_diagnostics(fit_sir_negbin)
posts <-  rstan::extract(fit_sir_negbin)
mod_diagnostics  <- rstan::get_sampler_params(fit_sir_negbin)
color_scheme_set("viridisE")
fit_CIS <- posts$y[, ,6]*1000
fit_SIR <- fit_CIS
median_I = apply(fit_SIR, 2, median)
low_I = apply(fit_SIR, 2, quantile, probs = c(0.025))
high_I = apply(fit_SIR, 2, quantile, probs = c(0.975))
df_sample_N = data.frame(cases, dates)
df_sample_N_real = data.frame(cases_real, t_real)
df_fit_CIS = data.frame(median_I, low_I, high_I, dates)
plt <- ggplot(df_sample_N,aes(x = dates, y = cases))+
geom_ribbon(aes(x = dates, ymin = low_I, ymax = high_I), fill = "orange",
alpha = 0.6) +
geom_line(data = df_fit_CIS, aes(x = dates, y = median_I,
color = "Median"), size = 1.3) +
geom_point(data = df_sample_N_real,
aes(x = t_real, y = cases_real), color = "red") +
geom_point(shape = 1, size = 2, (aes(color = "Data"))) +
scale_colour_manual(name = '', values = c('Data' = 'black',
'Median' = 'darkorange3')) +
guides(colour = guide_legend(override.aes = list(shape = c(16, NA),
linetype = c(0, 1)))) +
labs(x = "Time (days)", y = "Cumulative Infected Cases") + xlim(0, 33)
show(plt)
plt <- ggplot(df_sample_N,aes(x = dates, y = cases))+
geom_ribbon(aes(x = dates, ymin = low_I, ymax = high_I), fill = "orange",
alpha = 0.6) +
geom_line(data = df_fit_CIS, aes(x = dates, y = median_I,
color = "Median"), size = 1.3) +
geom_point(data = df_sample_N_real,
aes(x = t_real, y = cases_real), color = "red") +
geom_point(shape = 1, size = 2, (aes(color = "Data"))) +
scale_colour_manual(name = '', values = c('Data' = 'black',
'Median' = 'darkorange3')) +
guides(colour = guide_legend(override.aes = list(shape = c(16, NA),
linetype = c(0, 1)))) +
labs(x = "Time (days)", y = "Cumulative Infected Cases") #+ xlim(0, 33)
show(plt)
fit_CIS <- posts$y[, ,3]*1000
fit_SIR <- fit_CIS
median_I = apply(fit_SIR, 2, median)
low_I = apply(fit_SIR, 2, quantile, probs = c(0.025))
high_I = apply(fit_SIR, 2, quantile, probs = c(0.975))
df_sample_N = data.frame(cases, dates)
df_sample_N_real = data.frame(cases_real, t_real)
df_fit_CIS = data.frame(median_I, low_I, high_I, dates)
plt <- ggplot(df_sample_N,aes(x = dates, y = cases))+
geom_ribbon(aes(x = dates, ymin = low_I, ymax = high_I), fill = "orange",
alpha = 0.6) +
geom_line(data = df_fit_CIS, aes(x = dates, y = median_I,
color = "Median"), size = 1.3) +
geom_point(data = df_sample_N_real,
aes(x = t_real, y = cases_real), color = "red") +
geom_point(shape = 1, size = 2, (aes(color = "Data"))) +
scale_colour_manual(name = '', values = c('Data' = 'black',
'Median' = 'darkorange3')) +
guides(colour = guide_legend(override.aes = list(shape = c(16, NA),
linetype = c(0, 1)))) +
labs(x = "Time (days)", y = "Cumulative Infected Cases") #+ xlim(0, 33)
show(plt)
posts <-  rstan::extract(fit_sir_negbin)
mod_diagnostics  <- rstan::get_sampler_params(fit_sir_negbin)
color_scheme_set("viridisE")
fit_CIS <- posts$y[, ,6]*1000
fit_SIR <- fit_CIS
median_I = apply(fit_SIR, 2, median)
low_I = apply(fit_SIR, 2, quantile, probs = c(0.025))
high_I = apply(fit_SIR, 2, quantile, probs = c(0.975))
df_sample_N = data.frame(cases, dates)
df_sample_N_real = data.frame(cases_real, t_real)
df_fit_CIS = data.frame(median_I, low_I, high_I, dates)
plt <- ggplot(df_sample_N,aes(x = dates, y = cases))+
geom_ribbon(aes(x = dates, ymin = low_I, ymax = high_I), fill = "orange",
alpha = 0.6) +
geom_line(data = df_fit_CIS, aes(x = dates, y = median_I,
color = "Median"), size = 1.3) +
geom_point(data = df_sample_N_real,
aes(x = t_real, y = cases_real), color = "red") +
geom_point(shape = 1, size = 2, (aes(color = "Data"))) +
scale_colour_manual(name = '', values = c('Data' = 'black',
'Median' = 'darkorange3')) +
guides(colour = guide_legend(override.aes = list(shape = c(16, NA),
linetype = c(0, 1)))) +
labs(x = "Time (days)", y = "Cumulative Infected Cases") #+ xlim(0, 33)
show(plt)
